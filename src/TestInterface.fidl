package test

import test.TestTypes from "TestTypes.fidl"

interface TestInterface {
	version {
		major 1
		minor 0
	}

	attribute MyStruct myStructAttribute

	attribute Int32 myAttribute

	attribute OtherEnum myEnumAttribute

	attribute ArrayOfStruct myArrayOfStruct

	attribute test.TestTypes.ArrayOfInt myArrayOfInt

	method TakeIntReturnIntWait {
		in {
			Int32 input
		}
		out {
			Int32 output2
		}
		error test.TestTypes.TestError
	}

	method TakeIntReturnInt {
		in {
			Int32 input
		}
		out {
			Int32 output2
		}
	}

	method TakeStringReturnString {
		in {
			String input
		}
		out {
			String output
		}
	}	
	
	method TakeBoolReturnBool {
		in {
			Boolean input
		}
		out {
			Boolean output
		}
	}
	
	method takeUnionReturnUnion {
		in {
			MyUnion input
		}
		out {
			MyUnion output
		}
	}

	method takeStructReturnStruct {
		in {
			MyStruct input
		}
		out {
			MyStruct output
		}
	}
	
	method takeEnumReturnEnum {
		in {
			OtherEnum input
		}
		out {
			OtherEnum output
		}
	}
	
	method takeArrayOfStructReturnArrayOfStruct {
		in {
			ArrayOfStruct input
		}
		out {
			ArrayOfStruct output
		}
	}

	method TestMethod {
		in {
			Int32 input
			String stringParam
		}
		out {
			Int32 val1
			Int32 val2
		}
	}
	
	method OtherTestMethod {
		out {
			String greeting
			Int32 identifier
		}
	}
	
	method methodWithStruct {
		in {
			MyStruct param1
		}
		out {
			MyStruct paramOut
		}
	}
	
	method triggerBroadcast {
	}
	
	method methodWithUnion {
		in {
			MyUnion inParam
		}
		out {
			MyUnion outParam
		}
	}
	
	method methodWithMap {
		in {
			MyMap param
		}
	}

	broadcast MyBroadcast {
		out {
			String message
			
		}
	}

	broadcast MyBroadcastWithUnion {
		out {
			MyUnion param			
		}
	}

	broadcast broadcastWithStruct {
		out {
			MyStruct value
		}
	}


	broadcast broadcastWithEnum {
		out {
			OtherEnum value
		}
	}


	<**
		@description : Custom struct 
	**>
	struct MyStruct {
		Int32 intField
		String stringField
		Boolean boolField
		OtherEnum enumField
		MySubStruct subStructField
		MyUnion unionField
		test.TestTypes.ArrayOfInt array_
	}

	struct MySubStruct {
		Int32 intField
		String stringField
	}

	array ArrayOfStruct of MyStruct


	union MyUnion {
		Int16 int16Value
		String stringValue
	}

	map MyMap {
		Boolean to String
	}

	enumeration OtherEnum {
		VALUE_1
		VALUE_2
		VALUE_3
	}

	enumeration TestEnum {
		E_ERROR = "0x00"
		E_OK = "0x01"
		E_NOT_USED = "0x03"
	}

//	enumeration TestError {
//		E_ERROR = "0x00"
//		E_OK = "0x01"
//		E_NOT_USED = "0x03"
//	}

}
